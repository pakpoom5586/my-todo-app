// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  todos     Todo[]
  categories Category[]
}

model Todo {
  id          String    @id @default(cuid())
  title       String
  description String? 
  isCompleted Boolean   @default(false)
  priority    Priority  @default(MEDIUM)
  dueDate     DateTime?
  status      Status    @default(TODO)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId String?
  parentId  String?
  parent    Todo?    @relation("SubTasks", fields: [parentId], references: [id])
  subTasks  Todo[]   @relation("SubTasks")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  todos     Todo[]

  @@unique([name, userId])
}

enum Role {
  USER
  ADMIN
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}